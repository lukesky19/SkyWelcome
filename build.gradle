plugins {
    id 'java'
    id("io.github.goooler.shadow") version "8.1.7"
    id 'jacoco'
}

group = 'com.github.lukesky19'
version = '1.1.0-DEV-4'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }

    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven {
        name = "PlaceholderAPI Repo"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
}

dependencies {
    // Build dependencies
    compileOnly 'io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'com.arcaniax:HeadDatabase-API:1.3.2'
    compileOnly 'net.kyori:adventure-api:4.17.0'
    compileOnly 'net.kyori:adventure-text-minimessage:4.17.0'
    implementation 'org.spongepowered:configurate-yaml:4.1.2'
    implementation 'com.github.stefvanschie.inventoryframework:IF:0.10.17'
    implementation "org.bstats:bstats-bukkit:3.0.2"
    implementation "org.bstats:bstats-bukkit:3.0.2"

    // Test Dependencies
    testCompileOnly('io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT')
    testCompileOnly('me.clip:placeholderapi:2.11.6')
    testCompileOnly('com.arcaniax:HeadDatabase-API:1.3.2')
    testCompileOnly('net.kyori:adventure-api:4.17.0')
    testCompileOnly('net.kyori:adventure-text-minimessage:4.17.0')
    testImplementation 'org.mockito:mockito-core:5.13.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // Runtime Dependencies
    runtimeOnly('io.papermc.paper:paper-api:1.21-R0.1-SNAPSHOT')
    runtimeOnly('me.clip:placeholderapi:2.11.6')
    runtimeOnly('com.arcaniax:HeadDatabase-API:1.3.2')
    runtimeOnly('net.kyori:adventure-api:4.17.0')
    runtimeOnly('net.kyori:adventure-text-minimessage:4.17.0')
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir("jacocoHtml")
    }
}

shadowJar {
    archiveClassifier.set(null)
    relocate('org.spongepowered.configurate', 'com.github.lukesky19.skywelcome.libs.configurate')
    relocate('com.github.stefvanschie.inventoryframework', 'com.github.lukesky19.skywelcome.libs.inventoryframework')
    relocate('org.bstats', 'com.github.lukesky19.skywelcome.libs.bstats')
    minimize()
    manifest {
        attributes("paperweight-mappings-namespace": "mojang")
    }
}

build.dependsOn shadowJar